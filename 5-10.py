#5-10 음료수 얼려먹기 문제
#n(행) * m(열) 얼음틀에 구멍이 뚫려있다. 구멍있는 부분은 0 칸막이는 1임
#구멍끼리 붙어있는경우 연결되어 있는것으로 간주
#이때 생성되는 아이스크림 덩어리의 개수는?

# 입력 예시
# 15 14
# 00000111100000
# 11111101111110
# 11011101101110
# 11011101100000
# 11011111111111
# 11011111111100
# 11000000011111
# 01111111111111
# 00000000011111
# 01111111111000
# 00011111111000
# 00000001111000
# 11111111110011
# 11100011111111
# 11100011111111

# 출력 예시
# 8

#n, m을 구분하여 입력받기
n, m = map(int, input().split())

#2차원 리스트의 맵 정보 입력받기
graph = []
for i in range(n):
    graph.append(list(map(int, input().split())))

#dfs로 특정한 노드를 방문한 뒤에 연결된 모든 노드들도 방문
def dfs(x, y):
    #범위를 벗어나는 경우에는 즉시 종료
    if x <= -1 or y <= -1 or x >= n or y >= m:
        return False
    if graph[x][y] == 0:
        #해당 노드 방문 처리
        graph[x][y] = 1
        #상 하 좌 우 위치도 재귀적으로 호출
        dfs(x - 1, y)
        dfs(x, y - 1)
        dfs(x + 1, y)
        dfs(x, y + 1)
        return True
    return False

result = 0
for i in range(n):
    for j in range(m):
        if dfs(i, j) == True:
            result += 1

print(result)

#햇갈리는거 행(row) 열(column)
#여기서는 x를 행으로, y를 열으로 봐서 x 는 range(n), y는 range(m)이 되었따.
#보통 수학에서 x를 가로축 y를 세로축으로 하는데 여기에 꽂혀서 문제푸는데 햇갈렷다. 조심하자.
